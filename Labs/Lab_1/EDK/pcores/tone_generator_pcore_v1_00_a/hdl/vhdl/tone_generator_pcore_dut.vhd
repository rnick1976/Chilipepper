-- -------------------------------------------------------------
-- 
-- File Name: C:\GIT\QPSK_Pcore\Labs\Lab_1\MATLAB\codegen\output_tone\hdlsrc\tone_generator_pcore_dut.vhd
-- Created: 2013-12-11 15:33:43
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: tone_generator_pcore_dut
-- Source Path: tone_generator_pcore/tone_generator_pcore_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY tone_generator_pcore_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        myInput                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        ce_out                            :   OUT   std_logic;  -- ufix1
        i_out                             :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        q_out                             :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        blinky                            :   OUT   std_logic  -- ufix1
        );
END tone_generator_pcore_dut;


ARCHITECTURE rtl OF tone_generator_pcore_dut IS

  -- Component Declarations
  COMPONENT output_tone_fixpt
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          myInput                         :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          ce_out                          :   OUT   std_logic;  -- ufix1
          i_out                           :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          q_out                           :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          blinky                          :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : output_tone_fixpt
    USE ENTITY work.output_tone_fixpt(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL i_out_sig                        : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL q_out_sig                        : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL blinky_sig                       : std_logic;  -- ufix1

BEGIN
  u_output_tone_fixpt : output_tone_fixpt
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              myInput => myInput,  -- ufix9
              ce_out => ce_out_sig,  -- ufix1
              i_out => i_out_sig,  -- sfix12
              q_out => q_out_sig,  -- sfix12
              blinky => blinky_sig  -- ufix1
              );

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  i_out <= i_out_sig;

  q_out <= q_out_sig;

  blinky <= blinky_sig;

END rtl;

