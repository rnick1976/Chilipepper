-- -------------------------------------------------------------
-- 
-- File Name: C:\GIT\QPSK_Pcore\QPSK_Radio\MATLAB\codegen\dac_driver\hdlsrc\dac_driver_pcore_dut.vhd
-- Created: 2014-01-16 16:35:28
-- 
-- Generated by MATLAB 8.3, MATLAB Coder 2.6 and HDL Coder 3.4
-- 
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: dac_driver_pcore_dut
-- Source Path: dac_driver_pcore/dac_driver_pcore_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY dac_driver_pcore_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        tx_i                              :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        tx_q                              :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        dac_en                            :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        tx_iq_sel                         :   OUT   std_logic;  -- ufix1
        txd                               :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        blinky                            :   OUT   std_logic  -- ufix1
        );
END dac_driver_pcore_dut;


ARCHITECTURE rtl OF dac_driver_pcore_dut IS

  -- Component Declarations
  COMPONENT dac_driver_fixpt
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          tx_i                            :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          tx_q                            :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          dac_en                          :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          tx_iq_sel                       :   OUT   std_logic;  -- ufix1
          txd                             :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          blinky                          :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : dac_driver_fixpt
    USE ENTITY work.dac_driver_fixpt(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL dac_en_sig                       : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL tx_iq_sel_sig                    : std_logic;  -- ufix1
  SIGNAL txd_sig                          : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL blinky_sig                       : std_logic;  -- ufix1

BEGIN
  u_dac_driver_fixpt : dac_driver_fixpt
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              tx_i => tx_i,  -- sfix12
              tx_q => tx_q,  -- sfix12
              dac_en => dac_en_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              tx_iq_sel => tx_iq_sel_sig,  -- ufix1
              txd => txd_sig,  -- sfix12
              blinky => blinky_sig  -- ufix1
              );

  dac_en_sig <= dac_en;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  tx_iq_sel <= tx_iq_sel_sig;

  txd <= txd_sig;

  blinky <= blinky_sig;

END rtl;

